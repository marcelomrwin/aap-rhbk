---
- name: Playbook to create a user and a client on Red Hat Build of Keycloak
  hosts: all  
  tasks:

    - name: Generate keycloak auth token
      ansible.builtin.uri:
        url: "{{ rhbk_management_url }}/realms/master/protocol/openid-connect/token"
        method: POST
        body: "client_id={{ rhbk_auth_client }}&username={{ rhbk_admin_user }}&password={{ rhbk_admin_password }}&grant_type=password"
        validate_certs: false
      no_log: false
      register: rhbk_auth_response
      until: rhbk_auth_response.status == 200
      retries: 5
      delay: 2

    - name: Retrieve realm-management client
      ansible.builtin.uri:
        url: "{{ rhbk_management_url }}/admin/realms/{{ rhbk_realm }}/clients?clientId=realm-management"
        method: GET        
        validate_certs: false
        headers:
          Authorization: "Bearer {{ rhbk_auth_response.json.access_token }}"
        status_code: 
          - 200          
      no_log: false
      register: rhbk_client_response
      until: rhbk_client_response.status == 200

    - name: "Check if User Already Exists"
      ansible.builtin.uri:
        url: "{{ rhbk_management_url }}/admin/realms/{{ rhbk_realm }}/users?username={{ user_username }}"
        validate_certs: false
        headers:
          Authorization: "Bearer {{ rhbk_auth_response.json.access_token }}"
      register: rhbkk_user_search_result

    - name: "Create User"
      ansible.builtin.uri:
        url: "{{ rhbk_management_url }}/admin/realms/{{ rhbk_realm }}/users"
        method: POST
        body:
          enabled: true          
          username: "{{ user_username }}"
          email: "{{ user_email | default(omit) }}"
          firstName: "{{ user_firstName | default(omit) }}"
          lastName: "{{ user_lastName | default(omit) }}"
          emailVerified: true
        validate_certs: false
        body_format: json
        headers:
          Authorization: "Bearer {{ rhbk_auth_response.json.access_token }}"
        status_code: 201
      when: rhbkk_user_search_result.json | length == 0

    - name: "Get User"
      ansible.builtin.uri:
        url: "{{ rhbk_management_url }}/admin/realms/{{ rhbk_realm }}/users?username={{ user_username }}"
        validate_certs: false
        headers:
          Authorization: "Bearer {{ rhbk_auth_response.json.access_token }}"
      register: rhbk_user

    - name: "Update User Password"
      ansible.builtin.uri:
        url: "{{ rhbk_management_url }}/admin/realms/{{ rhbk_realm }}/users/{{ (rhbk_user.json | first).id }}/reset-password"
        method: PUT
        body:
          type: password
          temporary: false
          value: "{{ user_password }}"
        validate_certs: false
        body_format: json
        status_code:
          - 200
          - 204
        headers:
          Authorization: "Bearer {{ rhbk_auth_response.json.access_token }}"
      register: rhbk_user

    - name: "Create Client"
      ansible.builtin.uri:
        url: "{{ rhbk_management_url }}/admin/realms/{{ rhbk_realm }}/clients"
        method: POST
        body:
          clientId: "{{ client_clientId }}"
          name: "{{ client_name | default(omit) }}"
          rootUrl: "{{ client_rootUrl | default(omit) }}"
          adminUrl: "{{ client_adminUrl | default(omit) }}"
          baseUrl: "{{ client_baseUrl | default(omit) }}"
          enabled: true
          protocol: openid-connect
          standardFlowEnabled: true
          webOrigins:
            - "*"
          redirectUris:
            - "*"
          implicitFlowEnabled: false
          publicClient: false
        validate_certs: false
        body_format: json
        headers:
          Authorization: "Bearer {{ rhbk_auth_response.json.access_token }}"
        status_code: 
          - 200
          - 201
      register: rhbk_client
    
    - name: Debug client
      ansible.builtin.debug:
        var: rhbk_client

    - name: "Retrieve client {{ client_clientId }} Id"
      ansible.builtin.uri:
        url: "{{ rhbk_client.location }}"
        method: GET
        validate_certs: false
        headers:
          Authorization: "Bearer {{ rhbk_auth_response.json.access_token }}"
        status_code: 
          - 200          
      no_log: false
      register: rhbk_client_detail
      until: rhbk_client_detail.status == 200

    - name: Debug client detail
      ansible.builtin.debug:
        var: rhbk_client_detail

    - name: "Create Client Policy"
      ansible.builtin.uri:
        url: "{{ rhbk_management_url }}/admin/realms/{{ rhbk_realm }}/clients/{{ rhbk_client_response.json[0].id }}/authz/resource-server/policy/client"
        method: POST
        body:
          clients: 
            - "{{ rhbk_client_detail.json.id }}"
          logic: POSITIVE
          name: "policy-{{ rhbk_client_detail.json.clientId }}"
          description: "{{ rhbk_client_detail.json.name }} Filter Policy"          
        validate_certs: false
        body_format: json
        headers:
          Authorization: "Bearer {{ rhbk_auth_response.json.access_token }}"
        status_code: 
          - 200
          - 201
      register: rhbk_policy

    - name: "Retrieve client resource"
      ansible.builtin.uri:
        url: "{{ rhbk_management_url }}/admin/realms/{{ rhbk_realm }}/clients/{{ rhbk_client_response.json[0].id }}/authz/resource-server/resource?first=0&max=11&deep=false"
        method: GET
        validate_certs: false
        headers:
          Authorization: "Bearer {{ rhbk_auth_response.json.access_token }}"
        status_code: 
          - 200          
      no_log: false
      register: rhbk_resource_client
      until: rhbk_resource_client.status == 200

    - name: Debug client resource
      ansible.builtin.debug:
        var: rhbk_resource_client

    - name: "Retrieve Manage Permission"
      ansible.builtin.uri:
        url: "{{ rhbk_management_url }}/admin/realms/{{ rhbk_realm }}/clients/{{ rhbk_client_response.json[0].id }}/authz/resource-server/scope?name=manage"
        method: GET
        validate_certs: false
        headers:
          Authorization: "Bearer {{ rhbk_auth_response.json.access_token }}"
        status_code: 
          - 200          
      no_log: false
      register: rhbk_resource_manage
      until: rhbk_resource_manage.status == 200

    - name: "Create Client Permission"
      ansible.builtin.uri:
        url: "{{ rhbk_management_url }}/admin/realms/{{ rhbk_realm }}/clients/{{ rhbk_client_response.json[0].id }}/authz/resource-server/permission/scope"
        method: POST
        body:
          resources: 
            - "{{ rhbk_resource_client.json[0]._id }}"
          policies:
            - "{{ rhbk_policy.json.id }}"
          scopes: 
            - "{{ rhbk_resource_manage.json[0].id }}"
          name: "scope-permission-{{ rhbk_client_detail.json.clientId }}"
          description: "{{ rhbk_client_detail.json.name }} Scoped Permission"
          decisionStrategy: UNANIMOUS
        validate_certs: false
        body_format: json
        headers:
          Authorization: "Bearer {{ rhbk_auth_response.json.access_token }}"
        status_code: 
          - 200
          - 201
      